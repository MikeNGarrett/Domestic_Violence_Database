# Everything here is vulnerable to SQL injection; be sure to mention it to team
# so we can scrub our inputs first

# Still remaining (2013 Jan 27) 00:25:
# Finish sp_update_org
# Need to add timestamp to updates on sp_create_org and sp_update_org
# Testing all queries

# Organization CRUD Stored Procedures
# sp_create_org, sp_read_org, sp_update_org, sp_delete_org

create procedure sp_create_org (cat varchar(45), org varchar(45), city varchar(45), state varchar(45), phone varchar(45), website varchar(45), description varchar(1024))
begin
declare @cat_id int
insert into organizations (name, city, state_province, phone, website, description) values (@org, @city, @state, @phone, @website, @description)
set @cat_id = select servicetype.servicetype_id where (servicetype.servicetype_desc like @cat)
insert into org_servicetype (fk_organization_name, fk_organization_city, fk_organization_state, fk_servicetype_id) values (@org, @city, @state, @cat_id) 
end

create procedure sp_read_org (state varchar(45), category varchar(255))
begin
select org.name "Organization Name", org.street "Street", org.neighborhood "Neighborhood",
org.city "City", org.state_province "State/Province", org.zip_postalcode "Zip/Postal Code",
org.county "County", org.nation "Nation", org.cross_streets "Cross Streets", org.latitude "Latitude",
org.longitude "Longitude", org.phone "Phone", org.email "Email", org.website "Website",
org.confidential "Confidential", org.contact_name "Contact_Name", org.active "Active", org.description "Description",
sc.servicecost_desc "Service Costs", st.servicetype_desc "Service Type", sp.specialization_desc "Specialization",
up.updates_desc "Recently Updated"
from organizations as org

join org_servicecost as osc on ((org.name like osc.fk_organization_name) and (org.city like osc.fk_organization_city) and (org.state_province like osc.fk_organization_state) and (org.fk_service_cost = osc.fk_servicecost_id))
join servicecost as sc on (osc.fk_servicecost_id = sc.servicecost_id)

join org_servicetype as ost on ((org.name like ost.fk_organization_name) and (org.city like ost.fk_organization_city) and (org.state_province like ost.fk_organization_state) and (org.fk_service_type = ost.fk_servicetype_id))
join servicetype as st on (ost.fk_servicetype_id = st.servicetype_id)

join org_specialization as osp on ((org.name like osp.fk_organization_name) and (org.city like osp.fk_organization_city) and (org.state_province like osp.fk_organization_state) and (org.fk_specialization = osp.fk_specialization_id))
join specialization as sp on (osp.fk_specialization_id = sp.specialization_id)

join org_updates as oup on ((org.name like oup.fk_organization_name) and (org.city like oup.fk_organization_city) and (org.state_province like oup.fk_organization_state) and (org.fk_updated_on = oup.fk_updates_id))
join updates as up on (oup.fk_updates_id = up.updates.id)

where (org.state_province like @state and st.servicetype_desc like @category)

end

create procedure sp_update_org ()#holy fuck this is going to be a long query

create procedure sp_delete_org (org varchar(128), city varchar(45), state varchar(45))
begin
delete from organizations as org
where ((org.name like @org) and (org.city like @city) and (org.state like @state))
delete from org_servicecost as osc
where ((osc.fk_organization_name like @org) and (osc.fk_organization_city like @city) and (osc.fk_organization_state like @state))
delete from org_servicetype as ost
where ((ost.fk_organization_name like @org) and (ost.fk_organization_city like @city) and (ost.fk_organization_state like @state))
delete from org_specialization as osp
where ((osp.fk_organization_name like @org) and (osp.fk_organization_city like @city) and (osp.fk_organization_state like @state))
delete from org_updates as oup
where ((oup.fk_organization_name like @org) and (oup.fk_organization_city like @city) and (oup.fk_organization_state like @state))
end

# User CRUD Stored Procedures
# sp_create_user, sp_read_user, sp_update_user, sp_delete_user

create procedure sp_create_user (username varchar(45), password varchar(45), role int, domain varchar(45))
begin
insert into users (username, password, role, domain) values (@username, @password, @role, @domain)
end
create procedure sp_read_user (username varchar(45), role int, domain varchar(45))
begin
select username, role_description, domain from users 
join roles on users.role = roles.role_id
where ((username like @username) or (role = @role_id) or (domain like @domain))
end
create procedure sp_update_user (username varchar(45), password varchar(45), role int, domain varchar(45))
begin
update users set password = @password, role = @role, domain = @domain
where username like @username
end
create procedure sp_delete_user (username varchar(45))
begin
delete from users
where username like @username
end